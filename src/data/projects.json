{
  "projects": [
    {
      "name": "Simollu",
      "period": "2023.03 ~ 2023.04",
      "skills": [
        "Flutter", "git"
      ],
      "role": [
        "FE 개발",
        "웹 크롤링 프로그램 개발"
      ],
      "summary": "시간 가는 줄 모르는 웨이팅 앱 Simollu입니다. 식당에 예약을 걸고 대기하는 시간 동안 식당 근처 놀 거리를 추천해줍니다.",
      "images": [
        "simollu/1.png",
        "simollu/2.png",
        "simollu/3.png",
        "simollu/4.png",
        "simollu/5.png",
        "simollu/6.png",
        "simollu/7.png",
        "simollu/8.png",
        "simollu/9.png",
        "simollu/10.png",
        "simollu/11.png",
        "simollu/12.png",
        "simollu/13.png",
        "simollu/14.png",
        "simollu/15.png",
        "simollu/16.png",
        "simollu/17.png"
      ],
      "features": [
        "FCM과 연동하여 사용자 휴대폰으로 알림을 보내는 기능",
        "식당 시간대 별 평균 웨이팅 시간 확인 기능",
        "식당 대기 예약 기능",
        "대기 시간 동안 사용자 취향에 따라 식당 근처 놀거리를 알려주는 기능",
        "현재 위치에서 해당 장소를 거쳐 식당까지 가는 경로를 알려주는 기능"
      ],
      "reason": [
        "처음 프로젝트 기획 단계에서 ios와 안드로이드 모두를 지원하는 크로스 플랫폼 앱으로 만들기 위해 React Native와 Flutter 중 어떤 것을 사용하여 개발을 진행할 지 고민하게 되었습니다.",
        "프론트 엔드를 담당한 팀원 3명 모두 React 경험이 있지만, 성능적인 측면에서 Flutter가 더 나은 퍼포먼스를 보여주고 있고, React Native는 Android와 iOS 컴포넌트들을 끌어다 쓰는 bridge 역할을 하는데 이 부분에서 한 컴포넌트를 화면에 띄웠을 때 Android에서 상당히 다르게 보이거나 iOS에서 보지 못한 버그가 Android에서는 존재하는 등 굉장히 크리티컬한 문제들이 생기는 경우가 많습니다.",
        "이러한 이유로 Flutter를 사용하여 프로젝트를 진행하게 되었습니다."
      ],
      "result": [
        "파이썬 + 셀레니움을 활용하여 네이버 지도에서 식당 데이터를 크롤링해보았습니다.",
        "지금까지 웹 개발 위주로만 프로젝트를 진행했는데 처음으로 앱을 만들어 보았습니다.",
        "플러터 문서와 강의, ChatGPT를 활용하여 플러터에 대해 학습하였습니다.",
        "하단 네비게이션 바와 상단의 앱 바를 고정 시키고 중간의 화면만 바꿔주기 위해 Nested Navigation 기능을 구현하였습니다."
      ],
      "review": [
        "처음 진행한 앱 프로젝트입니다.",
        "프로젝트 기능을 구현하는데 시간이 늦어져 테스트를 많이 해보지 못한 것이 아쉽습니다.",
        "이전까지는 node 환경에서 axios를 활용하여 웹 페이지의 소스를 가져오는 방식으로 크롤링을 해보았는데 이번에 처음으로 셀레니움을 사용하여 크롤링을 진행했는데, 직접 개발한 크롤링 프로그램에 의해 브라우저가 실행되고, 검색 창에 자동으로 텍스트를 입력하거나, 특정 태그를 클릭하는 것이 신기했습니다."
      ]
    },
    {
      "name": "FaST",
      "period": "2023.03 ~ 2023.04",
      "skills": [
        "js", "ts", "React", "Docker", "Jenkins", "Express", "git", "MySQL", "Blender"
      ],
      "role": [
        "FE 개발",
        "CI/CD",
        "이미지 저장 서버 개발",
        "3D 모델링"
      ],
      "summary": "언제 어느 여행지를 다녀 왔는지 기억하기 위한, 자신이 겪은 여행 경험을 다른 사람들과 공유하기 위한 여행 기록 공유 SNS, FaST 입니다.",
      "images": [
        "fast/1.png", "fast/2.png", "fast/3.png", "fast/4.png", "fast/5.png", "fast/6.png", "fast/7.png", "fast/8.png", "fast/9.png", "fast/10.png"
      ],
      "features": [
        "글 작성, 팔로우, 팔로잉 등 기본 SNS 기능",
        "각 지역별 랜드마크를 사진으로 촬영해 업로드하면, 해당 사진이 어떤 랜드마크인지 인식하고 스탬프를 찍어주는 기능",
        "여행했던 곳의 좌표를 지도에서 확인할 수 있는 기능"
      ],
      "reason": [
        "사용자가 특정 랜드마크를 방문해야 할 이유를 만들어주기 위해 스탬프 기능을 도입하였습니다.",
        "SNS를 구현한 프로젝트이다보니 수십장의 이미지를 내려받다가 Firestore의 허용된 대역폭을 넘어서 Firebase가 잠기는 일이 발생했습니다. 이를 해결하기 위해 자체 이미지 저장 서버를 구현하였습니다."
      ],
      "result": [
        "Docker와 Gitlab을 연동하여 CI/CD 환경을 구축해보았습니다.",
        "PC 브라우저 환경의 화면만 구현해보다가 처음으로 모바일 웹 페이지를 구현해보았습니다.",
        "웹 크롤링과 이미지 저장 서버를 구현해보았습니다.",
        "6명으로 시작했던 프로젝트는 중간에 팀원 2명이 취업에 성공하여 나가게 되었지만, 남은 4명이 서로 협동하여 무사히 프로젝트를 끝마칠 수 있었습니다.",
        "이미지 슬라이더를 처음 구현해보았습니다. React의 MouseEvent를 이용해 드래그한 가로 길이가 컴포넌트의 절반을 넘어가면 다음 사진을 보여주도록 구현하였습니다.",
        "무한 스크롤을 처음 구현해보았습니다. Intersection Observer API를 이용하여 등록한 컴포넌트가 화면에 일정 비율 이상 표시되면, 다음 페이지의 글들을 불러오도록 구현하였습니다."
      ],
      "review": [
        "프로젝트 완성이 거의 다됐을 무렵 기존에 이미지를 저장하던 FireStore가 잠기는 일이 발생했습니다. 이미지를 저장하기 위해 이전 프로젝트에서도 사용했었던 FireStore를 이번 프로젝트에서도 그대로 사용하였는데, 저장된 이미지 용량이 크고, SNS이다보니 이미지를 수시로 불러와야해서 대역폭 사용량은 기하급수적으로 늘어났는데, 무료 플랜의 FireStore는 하루 1GB의 대역폭 사용만 허용하였기 때문에 1GB를 초과한 경우에 FireStore가 잠기는 문제였습니다.",
        "이를 해결하기 위해 우선 browser-image-compression 라이브러리를 사용하여 서버에 업로드하는 이미지를 프론트에서 압축하여 크기를 줄이고, 자체 이미지 저장 서버를 구현하였습니다."
      ]
    },
    {
      "name": "AppleGame (1인 개발)",
      "period": "2023.03",
      "skills": [
        "js", "ts", "React", "tailwindcss", "Firebase", "git", "recoil"
      ],
      "role": [
        "Firebase 호스팅",
        "Firestore DB 연동",
        "GitActions 배포 자동화",
        "FE 개발"
      ],
      "summary": "당시 유행하던 사과 게임을 리액트를 사용해 만든 토이 프로젝트입니다.",
      "images": [
        "apple/1.png", "apple/2.png", "apple/3.png", "apple/4.png", "apple/5.png"
      ],
      "features": [
        "github에 변경 사항을 적용하면 GitAction을 통해 Firebase로 자동으로 배포합니다.",
        "클릭, 드래그 이벤트로 좌표를 계산하여 사각형을 렌더링하도록 구현하였습니다.",
        "2가지 테마를 구현하여 사용자가 원하는 테마를 선택할 수 있습니다.",
        "Firestore를 사용하여 점수를 저장하여 랭킹 기능을 구현하였습니다."
      ],
      "reason": [
        "프론트엔드만 빠르게 구현 한 후 배포와 랭킹 기능을 위한 데이터베이스까지 한번에 해결해주는 Firebase가 이번 토이 프로젝트에 적합하다고 생각했습니다."
      ],
      "result": [
        "Firestore는 CRUD횟수에 따라 과금량을 결정하는데 읽기는 하루 5만회, 쓰기, 수정, 삭제는 하루 2만회까지 무료로 사용할 수 있습니다. Firebase에 저장하는 데이터를 도큐먼트라고 하는데, 과금 정책의 CRUD 횟수는 이 도큐먼트에 대한 CRUD횟수를 의미합니다. 처음에는 사용자 1명의 점수 = 도큐먼트 1개로 저장하도록 DB를 구성하였지만, CRUD 횟수가 급격하게 올라 3월 11일부터 13일 사이에 읽기 횟수가 1200회 가까이 되는 것을 확인할 수 있습니다. 이 문제를 해결하기 위해 랭킹을 저장할 도큐먼트를 배열 타입으로 하나만 생성하고, 랭킹 정보를 등록할 때마다 해당 도큐먼트에 데이터를 저장하도록 하여 읽기 횟수를 줄일 수 있었습니다. Firestor는 NoSQL DB이어서 도큐먼트를 배열 타입으로 만들 수 있었기에 이런 꼼수가 가능했습니다.팀원들 모두 힘을 합쳐 프로젝트를 진행한 결과 반 우수 공통프로젝트로 선정되었습니다.",
        "직접 만든 프로젝트를 주변 사람들에게 공유하고 사용자들이 게임을 즐기는 모습을 보니 뿌듯함을 느꼈습니다"
      ],
      "review": [
        "env 파일에 API KEY를 따로 빼놓아도 git에만 올라가지 않을 뿐 빌드해서 배포하면 결국 화면에 키가 노출된다는 것을 깨달았습니다. 서버에 따로 API KEY를 저장해두고 필요할 때 서버에 요청하여 사용하도록 개선할 여지가 있습니다.",
        "지난 프로젝트에서 이미지 슬라이더를 구현하며 클릭, 드래그 이벤트를 통해 마우스의 위치를 실시간으로 확인할 수 있다는 것을 알았고, 이걸 토대로 사과 게임을 클론 코딩 해볼 수 있을 것 같아 프로젝트를 진행하였습니다.",
        "파이어베이스로 호스팅한 뒤에 지인들에게 url을 주어 피드백을 받을 수 있었습니다."
      ]
    },
    {
      "name": "ClasSee",
      "period": "2023.01 ~ 2023.02",
      "skills": [
        "js", "ts", "React", "WebRTC", "Firebase", "git", "recoil"
      ],
      "role": [
        "FE리더",
        "Openvidu 적용",
        "Firebase 연동",
        "카카오 API 연동" 
      ],
      "summary": "누구나 거리의 제약없이 원데이 클래스 강의를 개설하고, 수강할 수 있는 화상 온라인 원데이 플랫폼 프로젝트입니다.",
      "images": [
        "classee/1.png", "classee/2.png", "classee/3.png"
      ],
      "features": [
        "누구나 쉽게 온라인 화상 강의를 개설하고, 개설된 강의를 수강할 수 있습니다.",
        "Openvidu 라이브러리를 사용하여 화상통화 기능을 구현하였습니다.",
        "강의가 끝난 뒤에 강의 중 만든 작품을 사진으로 찍고 글을 적어 나만의 포토 카드를 생성할 수 있습니다."
      ],
      "reason": [
        "사진을 저장하고 불러오기 위해 세팅과 사용이 간편한 Firebase를 사용하였습니다.",
        "빠른 WebRTC 적용을 위해 Openvidu 라이브러리를 사용하여 화상통화 기능을 구현하였습니다.",
        "Redux는 러닝 커브가 높고, Recoil은 React를 개발한 META에서 직접 개발한 라이브러리이기 때문에 상태 관리를 위한 툴로 Recoil을 선정하였습니다.",
        "js는 데이터 타입에 대해 엄격하지 않아 애플리케이션이 개발자의 의도대로 작동하지 않는 에러가 발생할 수 있는데, ts를 사용하여 이러한 문제를 방지하고자 하였습니다."
      ],
      "result": [
        "팀원들 모두 힘을 합쳐 프로젝트를 진행한 결과 반 우수 공통프로젝트로 선정되었습니다.",
        "프론트엔드를 맡은 다른 팀원 두 명이 모두 React를 처음 사용해보았기 때문에 자연스레 개발을 막히거나 잘 모르는 부분에 대해 알려주는 역할을 맡게 되어서 스스로 공부하며 React 개발 능력을 향상 시킬 수 있었습니다.",
        "화상통화기능을 구현하기 위해 따로 노마드코더의 WebRTC를 활용한 줌 클론 코딩 강의를 수강하였고 WebRTC에 대해 알게되었습니다."
      ],
      "review": [
        "매일 팀원들과 스크럼 회의를 하며 진행 상황을 공유하고, 서로 모르거나 막히는 부분에 대해 스스럼 없이 의견을 나눌 수 있는 환경이 공통 프로젝트 우수상이라는 결과를 만들어낸 것 같습니다.",
        "서버와 연동을 진행하며 해당 기능이 제대로 작동하는지만 확인하고 넘어갔기 때문에 에러 핸들링에 미흡했고, 나중에 개발이 거의 끝나가는 시점에서 모든 api의 에러 코드를 일일이 핸들링 하는 것이 무척 힘들다고 느껴졌습니다. 앞으로 개발을 하며 기능이 제대로 수행되는 것 뿐만 아니라 다양한 조건 속에서 어떻게 에러를 처리할 것인지도 미리 생각하며 개발을 진행해야겠다고 생각했습니다."
      ]
    },
    {
      "name": "NERA",
      "period": "2020.07 ~ 2020.09",
      "skills": [
        "js", "React", "MongoDB", "koajs", "git"
      ],
      "role": [
        "Backend", "DB설계"
      ],
      "summary": "간편하게 과제를 올리고, 올라온 과제를 풀어서 제출할 수 있는 온라인 과제 제출 플랫폼 NERA 입니다. 코로나로 인해 모든 강의가 비대면으로 전환되며 과제를 온라인으로 내고, 제출할 수 있는 플랫폼이 있으면 좋지 않을까 하여 진행한 프로젝트입니다.",
      "images": [
        "nera/1.png", "nera/2.png"
      ],
      "features": [
        "수강생 명단 엑셀 파일을 업로드하여 한번에 수강생 목록을 추가하는 기능",
        "Latex 문법으로 과제를 생성(교수)하고, 제출(학생)할 수 있는 기능"
      ],
      "reason": [
        "러닝커브가 있는 스프링부트를 사용하기 보다 상대적으로 사용하기 쉬운 nodejs 기반의 koajs 프레임워크를 사용해 rest api 서버를 구현하였습니다. Express와 비교하여 koajs가 더 가볍고, async/await 문법을 쉽게 사용할 수 있다는 장점이 있습니다."
      ],
      "result": [
        "처음으로 팀원을 모아 진행했던 웹 프로젝트입니다.",
        "매주 회의를 통해 진행 상황을 공유하며, 팀 단위로 진행하는 개발 과정을 이해할 수 있었습니다.",
        "개발이 진행될수록 무언가 만들어지는게 보인다는 것에서 성취감을 얻을 수 있었습니다."
      ],
      "review": [
        "대학 포털 사이트에 온라인 강의실이라는 온라인 수업 영상과 과제를 올릴 수 있는 페이지가 생겨서 이 프로젝트가 실제로 사용되는 일은 없어서 아쉬웠습니다.",
        "그 전까지는 개인 프로젝트만 해오다가 처음 팀의 구성원으로 프로젝트를 진행했는데, 팀 단위 프로젝트의 진행 과정을 이해할 수 있었습니다."
      ]
    }
  ]
}