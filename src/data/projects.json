{
  "projects": [
{
      "name": "ClasSee",
      "period": "2023.01 ~ 2023.02",
      "skills": [
        "js", "ts", "React", "WebRTC", "Firebase", "git", "recoil"
      ],
      "role": [
        "FE리더",
        "Openvidu 적용",
        "Firebase 연동",
        "카카오 API 연동" 
      ],
      "summary": "누구나 거리의 제약없이 원데이 클래스 강의를 개설하고, 수강할 수 있는 화상 온라인 원데이 플랫폼 프로젝트입니다.",
      "images": [
        "classee/1.png", "classee/2.png", "classee/3.png"
      ],
      "features": [
        "누구나 쉽게 온라인 화상 강의를 개설하고, 개설된 강의를 수강할 수 있습니다.",
        "Openvidu 라이브러리를 사용하여 화상통화 기능을 구현하였습니다.",
        "강의가 끝난 뒤에 강의 중 만든 작품을 사진으로 찍고 글을 적어 나만의 포토 카드를 생성할 수 있습니다."
      ],
      "reason": [
        "사진을 저장하고 불러오기 위해 세팅과 사용이 간편한 Firebase를 사용하였습니다.",
        "빠른 WebRTC 적용을 위해 Openvidu 라이브러리를 사용하여 화상통화 기능을 구현하였습니다.",
        "Redux는 러닝 커브가 높고, Recoil은 React를 개발한 META에서 직접 개발한 라이브러리이기 때문에 상태 관리를 위한 툴로 Recoil을 선정하였습니다.",
        "js는 데이터 타입에 대해 엄격하지 않아 애플리케이션이 개발자의 의도대로 작동하지 않는 에러가 발생할 수 있는데, ts를 사용하여 이러한 문제를 방지하고자 하였습니다."
      ],
      "result": [
        "팀원들 모두 힘을 합쳐 프로젝트를 진행한 결과 반 우수 공통프로젝트로 선정되었습니다.",
        "프론트엔드를 맡은 다른 팀원 두 명이 모두 React를 처음 사용해보았기 때문에 자연스레 개발을 막히거나 잘 모르는 부분에 대해 알려주는 역할을 맡게 되어서 스스로 공부하며 React 개발 능력을 향상 시킬 수 있었습니다.",
        "화상통화기능을 구현하기 위해 따로 노마드코더의 WebRTC를 활용한 줌 클론 코딩 강의를 수강하였고 WebRTC에 대해 알게되었습니다."
      ],
      "review": [
        "매일 팀원들과 스크럼 회의를 하며 진행 상황을 공유하고, 서로 모르거나 막히는 부분에 대해 스스럼 없이 의견을 나눌 수 있는 환경이 공통 프로젝트 우수상이라는 결과를 만들어낸 것 같습니다.",
        "서버와 연동을 진행하며 해당 기능이 제대로 작동하는지만 확인하고 넘어갔기 때문에 에러 핸들링에 미흡했고, 나중에 개발이 거의 끝나가는 시점에서 모든 api의 에러 코드를 일일이 핸들링 하는 것이 무척 힘들다고 느껴졌습니다. 앞으로 개발을 하며 기능이 제대로 수행되는 것 뿐만 아니라 다양한 조건 속에서 어떻게 에러를 처리할 것인지도 미리 생각하며 개발을 진행해야겠다고 생각했습니다."
      ]
    },
    {
      "name": "NERA",
      "period": "2020.07 ~ 2020.09",
      "skills": [
        "js", "React", "MongoDB", "koajs", "git"
      ],
      "role": [
        "Backend", "DB설계"
      ],
      "summary": "간편하게 과제를 올리고, 올라온 과제를 풀어서 제출할 수 있는 온라인 과제 제출 플랫폼 NERA 입니다. 코로나로 인해 모든 강의가 비대면으로 전환되며 과제를 온라인으로 내고, 제출할 수 있는 플랫폼이 있으면 좋지 않을까 하여 진행한 프로젝트입니다.",
      "images": [
        "nera/1.png", "nera/2.png"
      ],
      "features": [
        "수강생 명단 엑셀 파일을 업로드하여 한번에 수강생 목록을 추가하는 기능",
        "Latex 문법으로 과제를 생성(교수)하고, 제출(학생)할 수 있는 기능"
      ],
      "reason": [
        "러닝커브가 있는 스프링부트를 사용하기 보다 상대적으로 사용하기 쉬운 nodejs 기반의 koajs 프레임워크를 사용해 rest api 서버를 구현하였습니다. Express와 비교하여 koajs가 더 가볍고, async/await 문법을 쉽게 사용할 수 있다는 장점이 있습니다."
      ],
      "result": [
        "처음으로 팀원을 모아 진행했던 웹 프로젝트입니다.",
        "매주 회의를 통해 진행 상황을 공유하며, 팀 단위로 진행하는 개발 과정을 이해할 수 있었습니다.",
        "개발이 진행될수록 무언가 만들어지는게 보인다는 것에서 성취감을 얻을 수 있었습니다."
      ],
      "review": [
        "대학 포털 사이트에 온라인 강의실이라는 온라인 수업 영상과 과제를 올릴 수 있는 페이지가 생겨서 이 프로젝트가 실제로 사용되는 일은 없어서 아쉬웠습니다.",
        "그 전까지는 개인 프로젝트만 해오다가 처음 팀의 구성원으로 프로젝트를 진행했는데, 팀 단위 프로젝트의 진행 과정을 이해할 수 있었습니다."
      ]
    }
  ]
}